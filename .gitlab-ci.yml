variables:
  BUILD_IMAGE_NAME: "$CI_REGISTRY_IMAGE/branches/$CI_COMMIT_REF_SLUG-$TERRAFORM_VERSION:$CI_COMMIT_SHA"
  RELEASE_IMAGE_NAME: "$CI_REGISTRY_IMAGE/releases/$TERRAFORM_VERSION"
  TF_ADDRESS: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/terraform/state/$CI_JOB_ID"

stages:
  - lint
  - build
  - test
  - release

.dind: &dind
  services:
    - docker:19.03.5-dind
  image: docker:19.03.5
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

.build: &build
  <<: *dind
  stage: build
  script:
    - docker build --tag "$BUILD_IMAGE_NAME" --build-arg BASE=$TERRAFORM_BASE .
    - docker push "$BUILD_IMAGE_NAME"

.test-unit: &test-unit
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - terraform version
    - gitlab-terraform version
    - jq --version
    - cd tests
    - gitlab-terraform init
    - gitlab-terraform plan
    - if [[ ! -f "plan.cache" ]]; then echo "expected to find a plan.cache file"; exit 1; fi
    - gitlab-terraform plan-json
    - if [[ ! -f "plan.json" ]]; then echo "expected to find a plan.json file"; exit 1; fi

.release: &release
  <<: *dind
  stage: release
  script:
    - docker pull "$BUILD_IMAGE_NAME"
    - docker tag "$BUILD_IMAGE_NAME" "$RELEASE_IMAGE_NAME"
    - docker push "$RELEASE_IMAGE_NAME"
  only:
    - master

.terraform-0.11: &terraform011
  variables:
    TERRAFORM_BASE: "hashicorp/terraform:0.11.13"
    TERRAFORM_VERSION: "0.11"

.terraform-0.12: &terraform012
  variables:
    TERRAFORM_BASE: "hashicorp/terraform:0.12.26"
    TERRAFORM_VERSION: "0.12"

shell check:
  stage: lint
  image: koalaman/shellcheck-alpine:stable
  before_script:
    - shellcheck --version
  script:
    - shellcheck src/**/*.sh

build 0.11:
  <<: *terraform011
  <<: *build

build 0.12:
  <<: *terraform012
  <<: *build

test-unit 0.11:
  <<: *terraform011
  <<: *test-unit

test-unit 0.12:
  <<: *terraform012
  <<: *test-unit

release 0.11:
  <<: *terraform011
  <<: *release

release 0.12:
  <<: *terraform012
  <<: *release
